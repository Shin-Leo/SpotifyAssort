[package]
name = "spotify_assort"
version = "0.1.0"
edition = "2021"



[workspace]
members = [
    "rspotify-macros",
    "rspotify-model",
    "rspotify-http"
]
exclude = [
    "examples/webapp"
]
# For advanced features usage in the CLI, see:
# https://doc.rust-lang.org/nightly/cargo/reference/features.html#resolver-version-2-command-line-flags
resolver = "2"

[dependencies]
rspotify-macros = { path = "rspotify-macros", version = "0.11.0" }
rspotify-model = { path = "rspotify-model", version = "0.11.0" }
rspotify-http = { path = "rspotify-http", version = "0.11.0", default-features = false }

async-stream = { version = "0.3.2", optional = true }
async-trait = { version = "0.1.51", optional = true }
base64 = "0.13.0"
chrono = { version = "0.4.19", features = ["serde", "rustc-serialize"] }
dotenv = { version = "0.15.0", optional = true }
futures = { version = "0.3.17", optional = true }
getrandom = "0.2.3"
log = "0.4.14"
maybe-async = "0.2.6"
serde = { version = "1.0.130", default-features = false }
serde_json = "1.0.67"
sha2 = "0.10.0"
thiserror = "1.0.29"
url = "2.2.2"
webbrowser = { version = "0.7.0", optional = true }

rspotify = {version="0.11.0", features= ["cli", "env-file", "client-reqwest"]}
env_logger = { version = "0.9.0", default-features = false }
tokio = { version = "1.11.0", features = ["rt-multi-thread", "macros"] }

futures-util = "0.3.17"

[features]
cli = ["webbrowser"]
env-file = ["dotenv"]

features = ["cli", "env-file"]

__async = ["futures", "async-stream", "async-trait"]
client-reqwest = ["rspotify-http/client-reqwest", "__async"]
default = ["client-reqwest", "reqwest-default-tls"]
reqwest-default-tls = ["rspotify-http/reqwest-default-tls"]


[[example]]
name = "auth_code"
required-features = ["env-file", "cli", "client-reqwest"]
path = "examples/auth_code.rs"

[[example]]
name = "auth_code_pkce"
required-features = ["env-file", "cli", "client-reqwest"]
path = "examples/auth_code_pkce.rs"


[[example]]
name = "me"
required-features = ["env-file", "cli", "client-ureq"]
path = "examples/ureq/me.rs"